% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simanalyse-derive.R
\name{sma_derive}
\alias{sma_derive}
\title{Apply R code to derive new variables.}
\usage{
sma_derive(object = NULL, code, monitor = ".*",
  path.read = getOption("sims.path"),
  path.save = getOption("sims.path"), progress = FALSE,
  options = furrr::future_options())
}
\arguments{
\item{object}{One of either nlists, mcmc or mcmc.list or a list of those. If \code{parameters} is specified, this code must only transform variables present in \code{parameters}.}

\item{code}{A string of R code to derive posterior samples for new parameters. E.g. "var = sigma^2".}

\item{monitor}{A character vector (or regular expression if a string) specifying the names of the variables in \code{object} and/or \code{code} to monitor. By default all variables are included.}

\item{path.read}{A string. If object is NULL, analyses results are read from that path on disk.}

\item{path.save}{A string specifying the path to the directory to save the derived results. By default path = NULL and the results are not saved but returned as a list of nlists objects.}

\item{progress}{A flag specifying whether to print a progress bar.}

\item{options}{The future specific options to use with the workers.}
}
\value{
An object of the same class as \code{object}
}
\description{
Apply R code to derive new variables.
}
\examples{
set.seed(10L)
code <- "for(i in 1:10){x[i] ~ dnorm(0,1/variance)}"
parameters = nlist(variance=4)
dat <- sims::sims_simulate(code, parameters = parameters, nsims=2)
res <- sma_analyse_bayesian(dat, code, code.add = "variance ~ dunif(0,10)", 
n.adapt=100, n.burnin=0, n.iter=3, monitor="variance")
sma_derive(res, "sd=sqrt(variance)")
sma_derive(parameters, "sd=sqrt(variance)")
}
