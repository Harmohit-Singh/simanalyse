% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simanalyse-summarise.R
\name{sma_summarise}
\alias{sma_summarise}
\title{Summarises the results of simulation studies.}
\usage{
sma_summarise(results.nlists, measures = c("bias", "mse", "cp.quantile"),
  estimator = mean, alpha = 0.05, parameters, monitor = ".*",
  custom_expr, custom_FUNS)
}
\arguments{
\item{results.nlists}{An nlists of results}

\item{measures}{A vector of strings indicating which Monte Carlo measures to calculate. Strings may include "bias", "E" (expectation), 
"cp.quantile" (coverage probability of quantile-based CrIs), "cp.length" (coverage probability of quantile-based CrIs),
"Epvar" (expected posterior variance), "Epsd" (expected posterior standard deviation), "rb" (relative 
 bias), "br" (bias ratio), "var" (variance), "se" (standard error), rmse (root mean square error), "rrmse" (relative root mean square error),
"cv" (coefficient of variation), "all" (all the measures)}

\item{estimator}{A function, typically mean or median, for the Bayes estimator to use.}

\item{alpha}{scalar representing the alpha level used to construct credible intervals. Default is 0.05.}

\item{parameters}{Parameters to use to calculate Monte Carlo measures such as bias and coverage probability}

\item{monitor}{A character vector (or regular expression if a string) specifying the names of the stochastic nodes in code to include in the summary. By default all stochastic nodes are included.}

\item{custom_expr}{A string of R code to define custom measures; parameters is a reserved keyword. E.g. "bias = estimator - parameters".}

\item{custom_FUNS}{A string of R code to define functions to calculate aggregate values over the mcmc samples, which will be passed to \code{custom_expr}. E.g. list(estimator = mean).}
}
\value{
A flag.
}
\description{
Summarises the results of simulation studies. 
The results are compared with the true parameter values by calculating Monte Carlo measures 
such as bias, mean square error and coverage probability.
R code can be used to customize the summary measures and to coerce results of analyses to
nlist when neccessary.
}
\examples{
params <- nlist(mu=0)
dat <- sims::sims_simulate("a ~ dnorm(mu, 1)", 
                           parameters = params, 
                           nsims=5)
result <- sma_analyse_bayesian(datalist=dat,
                                      code = "a ~ dnorm(mu, 1)
                                              mu ~ dunif(-3,3)",
                                      n.adapt = 101,
                                      n.burnin = 0,
                                      n.iter = 101,
                                      monitor="mu")
sma_summarise(result, parameters=params)
sma_summarise(result, 
measures="", 
parameters=params, 
custom_expr= "bias = estimator - parameters", 
custom_FUNS= list(estimator = mean))
}
